# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    environment:
      NODE_ENV: production

      #JWT
      SALT: starci
      SECRET: starci
      ACCESS_TOKEN_EXPIRY_TIME: 15m
      REFRESH_TOKEN_EXPIRY_TIME: 30d
      VERIFY_TOKEN_EXPIRY_TIME: 10m

      #mysql
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: 123456
      MYSQL_SCHEMA: cistudy
      MYSQL_HOST: host.docker.internal
      MYSQL_PORT: 3306

      #mailer
      MAILER_USER: starcidapride@gmail.com
      MAILER_PASS: wysf ieyl emhn avfe

      #firebase
      FIREBASE_PROJECT_ID: uploadphotodrivingtest
      FIREBASE_PRIVATE_KEY: -----BEGIN PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDT1UtHfB0Vxar4\nGQ1c7qI3BEDYbU2H5oj2E22XDiliJeCxSOH/Mzvw03BSc7sxCzS5jmB7lu2jMxUp\nXaA/ONY+VnmuDw+Qf8v/j7eOggcxqh6GPWaA5EIOPo5Hb7YhpMvhAkIqfnyCviB4\nugpLn0ZmEQfEXiiPk/ADzEquDdHNHurSfRFQOl8h3ZUohm00IMP/Pdsls3KnNvl5\nm4fUsv+y9UwCh+mUy4WlJsc52ssen4wYb7Z48Tm4CQbdwj8VnbQ9ghCQDgR9FMdr\nzipngm+fxob+SUXEEdmL8ShNtmu9M36Ns9ZUrtamDmW34YleBYRthiCBySb3hpuj\nbsxuL+ovAgMBAAECggEAMosA5DSL6Ab67SllE9hoYgIkyr8Bsbxiz3wBOPqLCz0I\naKSAL9j0o1h/w1yTvHb1BJUhFjwDxV3J3c3WD1+rVsJhVBOJ3itv7DFJVbpWpxX1\nJIh/7Z8I18c7QXY5GbvtXWmhiewWH0foDYYuMK73KCFGHidtPBzLNszGwNLRTUR0\nswUijK429u+ScXNuVMdf6iSUkkmQiHWTzE3bigv+DXaDzyRc8iev4Gdwe7ms6v85\n5rngC3pCVzlYm+FFFeDjWD+tXheC2OUZbGdms8/XZVMHAkiE0nMp8c6JBiwkjl46\nDyfebuoGg5zIncRG4wZkVMI8PcbjlkIdZ0H4uc/bKQKBgQD9YM4OzxPqIVgeu1er\nm7jlBFFAvcTXvpNHmXq2SGxWncXMQte1cVWFCA1oi7kQp6XyozWeLX6IswQ+sv1m\nS0Xa+HBQbI6Ccx99DGaVBSx6DlxYoS295hnf1AOJbAvF96vD00R9xzTvFvlH0Lz7\nMdRrjjBb3ahkzFnXtmi9Df2SowKBgQDWBm/nrLwdMxmqu5qU/wKimAhfrxBM6jWT\njrwvmnYabln2SJVWMvAdyTs2IB+W7YBz2oEVzOy18IKqHy4RCkpWsGZp2UFx49ir\nBXZ/BGudgN9pVBg404pQLSwpiTFSxscpZJFnu4WBPlE+zOribnFAPkN/Y8k/SwWt\nCFM4B5GPBQKBgQCUcDQHpPUrwuEXD/XqiU4mjQL1BLffFLy/w4CKbZ9alw+b/MTW\nfVD2oKMKTmDbCvxDS65LvqdUelvQR5gAZ7TC9a0G0LIkZkFaRvuJ7gACeYtMORDN\nIZKi+FgiF/RFxDUSgiCr9xphv3nGwtkT6Dtjz2cxSogulTFFGI3/w8R8NQKBgQCB\nXWC0mz8VMzb3cPAN0VoJZ3XgSBPFOefqaeMrruRmM39jExpZAO8MQf7tR1twwdvb\nqx5NTBFkI50HMVOJ7zthzLwKjMw3B+6F6QZn3gciK6xeoPsHFi5LKhLAhHFwxD/L\nsEMHfVxD86PuHrR26yS/HSN1U55oCHPE0/xhKIn99QKBgQDYaxEU+UKt3B/RdqYp\n4qMeMPesy56hV4DlIV4w7lqCn82V+m99hoVrX6JSA1Im89HhYciSLYIhpuBxpqi7\nYi2Kk3pytvvfrRj62QWk7hwBeSrgFawIuRBsU78FNKfkxALYVf7QXBdEZH0UwQbx\n2URfz5JA5s/YNfTyiF7nsJZtug==\n-----END PRIVATE KEY-----\n
      FIREBASE_CLIENT_EMAIL: firebase-adminsdk-gy2r1@supple-century-363201.iam.gserviceaccount.com
    ports:
      - 3002:3002

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

